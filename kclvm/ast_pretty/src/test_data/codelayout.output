"""
Module documents
"""
import math as alias_math

schema Person(Base):
    name: str
    age: int

    "attr": str
    "attr-x": str

    check:
        age > 0 if age, "age must > 0"

person = Person {
    name: "Alice"
    age: 18
}
if True:
    a = 1

    b = 2

    c = 3
elif True:
    b = 2
else:
    c = 3
d = 1 + 2
e = (1 + 2)
f = [1, 2, 3]
g = {"key": "value"}
print(1)
dct = {"key": "value"}
lst = [1, 2, 3]
h = dct['key']
i = lst[1]
x = 1
y = 2
long_variable = 3
i = i + 1
submitted += 1
x = x * 2 - 1
hypot2 = x * x + y * y
_c = (a + b) * (a - b)
_b = 2
_c = 3
_d = 4

_value = (1 + 2 * 3)
_value = (1 + 2 * 3)
_value = 1 + -2 * ~3
_list = [1, 2, 3]
_list = [*_list, [4, 5, 6]]
_list = [*_list, [4, 5, 6]]

_dict = {**{"k": "v"}, **{"k": "v"}}
a = [1, 2, 3]
b = [
    1
    2
    3
    4
    5
    6
]
_dict = {
    "k1": "v1"
    "k2": "v2"
    "k3": "v3"
    "k4": "v4"
    "k5": "v5"
}
foo = 1
if foo is not None:
    _a = 1
    _dict |= {}
    hello = "world{}".format(1)[2:4:].lower()
    range_int = [i for i in range(10)]

op = 1 + 2 - -3 + (3 - 1) // 3
op += 1
op -= 12 + 23
print("  ", end='')
log = math.log(12)
aa = 1
assert aa == 1, "message"
assert aa == 1 if aa, "message"
aaaa = (1 + 2 / 2) if _a == 2 + +134.3 else ("a" * 3)
bbbb = "{}".format(a)
empty_list = []
empty_config = {}
number_suffix = 1Gi
long_string_0 = """
value
"""
long_string_1 = """\
value
"""
long_string_2 = """\
value"""
joined_data_0 = '\"false\" ${item.kind}: ${item.metadata.name}'
joined_data_1 = "\"false\" ${item.kind}: ${item.metadata.name}"
joined_data_2 = '''\
  ${CC}
'''
joined_data_3 = '''\
  $${CC}
'''
joined_data_4 = '''\
  \${CC}
'''
# Member access and index assign targets
a[0].b -= 1
a.b[0] += 1
a.b[1].c /= 1
a.b[c.d].e == 1
a.b[1 + 1].e = 1
a.b[f()].e = 1

a = 1

b = 2

c = 3

d = 4
e = 5
f = lambda {
    a = 1

    b = 2

    c = 3

    d = 4
    e = 5
}
config_if_entry = {
    if True:
        a = 1
    elif False:
        b = 2
    else:
        c = 3
        d = 4
        **e
    if a > 3:
        e = 5
    elif a < 2:
        f = 6
    if True:
        g = 7
}
list_if_item = [
    if True:
        1
    elif False:
        2
    else:
        3
        4
        *[5, 6]
    if False:
        2
]
